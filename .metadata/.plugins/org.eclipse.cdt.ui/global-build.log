03:09:15 **** Build of configuration Release for project DIO ****
make all 
Building file: ../DIO.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"DIO.d" -MT"DIO.o" -c -o "DIO.o" "../DIO.c"
../DIO.c: In function 'DIO_u8GetPortValue':
../DIO.c:167: warning: 'Value' may be used uninitialized in this function
../DIO.c: In function 'DIO_u8GetPinValue':
../DIO.c:192: warning: 'Value' may be used uninitialized in this function
Finished building: ../DIO.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
In file included from ../main.c:8:
c:/winavr-20100110/lib/gcc/../../avr/include/avr/delay.h:36:2: warning: #warning "This file has been moved to <util/delay.h>."
Finished building: ../main.c
 
Building target: DIO.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DIO.map -mmcu=atmega32 -o "DIO.elf"  ./DIO.o ./main.o   
Finished building target: DIO.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DIO.elf  "DIO.hex"
Finished building: DIO.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:DIO.hex:a
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Error 1
03:09:49 **** Incremental Build of configuration Release for project DIO ****
make all 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:DIO.hex:a
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Error 1
03:10:03 **** Incremental Build of configuration Release for project DIO ****
make all 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:DIO.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DIO.hex"
avrdude: input file DIO.hex auto detected as Intel Hex
avrdude: writing flash (888 bytes):

Writing | ################################################## | 100% 0.57s

avrdude: 888 bytes of flash written
avrdude: verifying flash memory against DIO.hex:
avrdude: load data flash data from input file DIO.hex:
avrdude: input file DIO.hex auto detected as Intel Hex
avrdude: input file DIO.hex contains 888 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.45s

avrdude: verifying ...
avrdude: 888 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
03:10:45 **** Incremental Build of configuration Release for project DIO ****
make all 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:DIO.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DIO.hex"
avrdude: input file DIO.hex auto detected as Intel Hex
avrdude: writing flash (888 bytes):

Writing | ################################################## | 100% 0.56s

avrdude: 888 bytes of flash written
avrdude: verifying flash memory against DIO.hex:
avrdude: load data flash data from input file DIO.hex:
avrdude: input file DIO.hex auto detected as Intel Hex
avrdude: input file DIO.hex contains 888 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.45s

avrdude: verifying ...
avrdude: 888 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
03:11:49 **** Incremental Build of configuration Release for project DIO ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
In file included from ../main.c:8:
c:/winavr-20100110/lib/gcc/../../avr/include/avr/delay.h:36:2: warning: #warning "This file has been moved to <util/delay.h>."
Finished building: ../main.c
 
Building target: DIO.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DIO.map -mmcu=atmega32 -o "DIO.elf"  ./DIO.o ./main.o   
Finished building target: DIO.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DIO.elf  "DIO.hex"
Finished building: DIO.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:DIO.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DIO.hex"
avrdude: input file DIO.hex auto detected as Intel Hex
avrdude: writing flash (886 bytes):

Writing | ################################################## | 100% 0.56s

avrdude: 886 bytes of flash written
avrdude: verifying flash memory against DIO.hex:
avrdude: load data flash data from input file DIO.hex:
avrdude: input file DIO.hex auto detected as Intel Hex
avrdude: input file DIO.hex contains 886 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.45s

avrdude: verifying ...
avrdude: 886 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
03:12:09 **** Incremental Build of configuration Release for project DIO ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
In file included from ../main.c:8:
c:/winavr-20100110/lib/gcc/../../avr/include/avr/delay.h:36:2: warning: #warning "This file has been moved to <util/delay.h>."
Finished building: ../main.c
 
Building target: DIO.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DIO.map -mmcu=atmega32 -o "DIO.elf"  ./DIO.o ./main.o   
Finished building target: DIO.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DIO.elf  "DIO.hex"
Finished building: DIO.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:DIO.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DIO.hex"
avrdude: input file DIO.hex auto detected as Intel Hex
avrdude: writing flash (886 bytes):

Writing | ################################################## | 100% 0.57s

avrdude: 886 bytes of flash written
avrdude: verifying flash memory against DIO.hex:
avrdude: load data flash data from input file DIO.hex:
avrdude: input file DIO.hex auto detected as Intel Hex
avrdude: input file DIO.hex contains 886 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.45s

avrdude: verifying ...
avrdude: 886 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
03:18:39 **** Incremental Build of configuration Release for project DIO ****
make all 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:DIO.hex:a
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Error 1
09:39:26 **** Build of configuration Release for project BlinkyLight ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkyLight.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkyLight.map -mmcu=atmega32 -o "BlinkyLight.elf"  ./main.o   
Finished building target: BlinkyLight.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S BlinkyLight.elf  >"BlinkyLight.lss"
Finished building: BlinkyLight.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkyLight.elf  "BlinkyLight.hex"
Finished building: BlinkyLight.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex BlinkyLight.elf  "BlinkyLight.eep"
Finished building: BlinkyLight.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 BlinkyLight.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     152 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:39:40 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 BlinkyLight.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     152 bytes (0.5% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:40:06 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Building target: BlinkyLight.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkyLight.map -mmcu=atmega32 -o "BlinkyLight.elf"  ./main.o   
Finished building target: BlinkyLight.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkyLight.elf  "BlinkyLight.hex"
Finished building: BlinkyLight.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:BlinkyLight.hex:a
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Error 1
09:40:43 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:BlinkyLight.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkyLight.hex"
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: writing flash (152 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 152 bytes of flash written
avrdude: verifying flash memory against BlinkyLight.hex:
avrdude: load data flash data from input file BlinkyLight.hex:
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: input file BlinkyLight.hex contains 152 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 152 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
09:41:05 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkyLight.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkyLight.map -mmcu=atmega32 -o "BlinkyLight.elf"  ./main.o   
Finished building target: BlinkyLight.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkyLight.elf  "BlinkyLight.hex"
Finished building: BlinkyLight.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:BlinkyLight.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkyLight.hex"
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: writing flash (152 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 152 bytes of flash written
avrdude: verifying flash memory against BlinkyLight.hex:
avrdude: load data flash data from input file BlinkyLight.hex:
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: input file BlinkyLight.hex contains 152 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 152 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
09:41:33 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:22: error: expected ';' before '_delay_ms'
make: *** [main.o] Error 1
09:41:48 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:22: error: expected ';' before '_delay_ms'
make: *** [main.o] Error 1
09:42:13 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkyLight.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkyLight.map -mmcu=atmega32 -o "BlinkyLight.elf"  ./main.o   
Finished building target: BlinkyLight.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkyLight.elf  "BlinkyLight.hex"
Finished building: BlinkyLight.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:BlinkyLight.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkyLight.hex"
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: writing flash (152 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 152 bytes of flash written
avrdude: verifying flash memory against BlinkyLight.hex:
avrdude: load data flash data from input file BlinkyLight.hex:
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: input file BlinkyLight.hex contains 152 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 152 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
09:42:30 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkyLight.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkyLight.map -mmcu=atmega32 -o "BlinkyLight.elf"  ./main.o   
Finished building target: BlinkyLight.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkyLight.elf  "BlinkyLight.hex"
Finished building: BlinkyLight.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:BlinkyLight.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkyLight.hex"
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: writing flash (152 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 152 bytes of flash written
avrdude: verifying flash memory against BlinkyLight.hex:
avrdude: load data flash data from input file BlinkyLight.hex:
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: input file BlinkyLight.hex contains 152 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 152 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
09:43:04 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkyLight.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkyLight.map -mmcu=atmega32 -o "BlinkyLight.elf"  ./main.o   
Finished building target: BlinkyLight.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkyLight.elf  "BlinkyLight.hex"
Finished building: BlinkyLight.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:BlinkyLight.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkyLight.hex"
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: writing flash (152 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 152 bytes of flash written
avrdude: verifying flash memory against BlinkyLight.hex:
avrdude: load data flash data from input file BlinkyLight.hex:
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: input file BlinkyLight.hex contains 152 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 152 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
09:43:35 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkyLight.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkyLight.map -mmcu=atmega32 -o "BlinkyLight.elf"  ./main.o   
Finished building target: BlinkyLight.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkyLight.elf  "BlinkyLight.hex"
Finished building: BlinkyLight.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:BlinkyLight.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkyLight.hex"
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: writing flash (152 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 152 bytes of flash written
avrdude: verifying flash memory against BlinkyLight.hex:
avrdude: load data flash data from input file BlinkyLight.hex:
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: input file BlinkyLight.hex contains 152 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 152 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
09:43:51 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkyLight.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkyLight.map -mmcu=atmega32 -o "BlinkyLight.elf"  ./main.o   
Finished building target: BlinkyLight.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkyLight.elf  "BlinkyLight.hex"
Finished building: BlinkyLight.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:BlinkyLight.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkyLight.hex"
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: writing flash (152 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 152 bytes of flash written
avrdude: verifying flash memory against BlinkyLight.hex:
avrdude: load data flash data from input file BlinkyLight.hex:
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: input file BlinkyLight.hex contains 152 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 152 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
09:44:17 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkyLight.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkyLight.map -mmcu=atmega32 -o "BlinkyLight.elf"  ./main.o   
Finished building target: BlinkyLight.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkyLight.elf  "BlinkyLight.hex"
Finished building: BlinkyLight.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:BlinkyLight.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkyLight.hex"
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: writing flash (136 bytes):

Writing | ################################################## | 100% 0.09s

avrdude: 136 bytes of flash written
avrdude: verifying flash memory against BlinkyLight.hex:
avrdude: load data flash data from input file BlinkyLight.hex:
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: input file BlinkyLight.hex contains 136 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.07s

avrdude: verifying ...
avrdude: 136 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
09:44:36 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkyLight.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkyLight.map -mmcu=atmega32 -o "BlinkyLight.elf"  ./main.o   
Finished building target: BlinkyLight.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkyLight.elf  "BlinkyLight.hex"
Finished building: BlinkyLight.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:BlinkyLight.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkyLight.hex"
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: writing flash (152 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 152 bytes of flash written
avrdude: verifying flash memory against BlinkyLight.hex:
avrdude: load data flash data from input file BlinkyLight.hex:
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: input file BlinkyLight.hex contains 152 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 152 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
09:45:11 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkyLight.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkyLight.map -mmcu=atmega32 -o "BlinkyLight.elf"  ./main.o   
Finished building target: BlinkyLight.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkyLight.elf  "BlinkyLight.hex"
Finished building: BlinkyLight.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:BlinkyLight.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkyLight.hex"
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: writing flash (152 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 152 bytes of flash written
avrdude: verifying flash memory against BlinkyLight.hex:
avrdude: load data flash data from input file BlinkyLight.hex:
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: input file BlinkyLight.hex contains 152 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 152 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
09:45:26 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkyLight.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkyLight.map -mmcu=atmega32 -o "BlinkyLight.elf"  ./main.o   
Finished building target: BlinkyLight.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkyLight.elf  "BlinkyLight.hex"
Finished building: BlinkyLight.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:BlinkyLight.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkyLight.hex"
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: writing flash (152 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 152 bytes of flash written
avrdude: verifying flash memory against BlinkyLight.hex:
avrdude: load data flash data from input file BlinkyLight.hex:
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: input file BlinkyLight.hex contains 152 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 152 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
09:45:44 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkyLight.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkyLight.map -mmcu=atmega32 -o "BlinkyLight.elf"  ./main.o   
Finished building target: BlinkyLight.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkyLight.elf  "BlinkyLight.hex"
Finished building: BlinkyLight.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:BlinkyLight.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkyLight.hex"
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: writing flash (152 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 152 bytes of flash written
avrdude: verifying flash memory against BlinkyLight.hex:
avrdude: load data flash data from input file BlinkyLight.hex:
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: input file BlinkyLight.hex contains 152 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 152 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
09:46:02 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkyLight.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkyLight.map -mmcu=atmega32 -o "BlinkyLight.elf"  ./main.o   
Finished building target: BlinkyLight.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkyLight.elf  "BlinkyLight.hex"
Finished building: BlinkyLight.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:BlinkyLight.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkyLight.hex"
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: writing flash (152 bytes):

Writing | ################################################## | 100% 0.10s

avrdude: 152 bytes of flash written
avrdude: verifying flash memory against BlinkyLight.hex:
avrdude: load data flash data from input file BlinkyLight.hex:
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: input file BlinkyLight.hex contains 152 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 152 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:06:13 **** Incremental Build of configuration Release for project DIO ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
In file included from ../main.c:8:
c:/winavr-20100110/lib/gcc/../../avr/include/avr/delay.h:36:2: warning: #warning "This file has been moved to <util/delay.h>."
Finished building: ../main.c
 
Building target: DIO.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DIO.map -mmcu=atmega32 -o "DIO.elf"  ./DIO.o ./main.o   
Finished building target: DIO.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DIO.elf  "DIO.hex"
Finished building: DIO.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:DIO.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DIO.hex"
avrdude: input file DIO.hex auto detected as Intel Hex
avrdude: writing flash (884 bytes):

Writing | ################################################## | 100% 0.60s

avrdude: 884 bytes of flash written
avrdude: verifying flash memory against DIO.hex:
avrdude: load data flash data from input file DIO.hex:
avrdude: input file DIO.hex auto detected as Intel Hex
avrdude: input file DIO.hex contains 884 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.44s

avrdude: verifying ...
avrdude: 884 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:12:38 **** Incremental Build of configuration Release for project DIO ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
In file included from ../main.c:8:
c:/winavr-20100110/lib/gcc/../../avr/include/avr/delay.h:36:2: warning: #warning "This file has been moved to <util/delay.h>."
../main.c: In function 'main':
../main.c:22: error: too few arguments to function 'DIO_VidSetPinDirection'
../main.c:25: error: too few arguments to function 'DIO_VidSetPinValue'
../main.c:27: error: too few arguments to function 'DIO_VidSetPinValue'
../main.c:29: error: too few arguments to function 'DIO_VidSetPinValue'
make: *** [main.o] Error 1
11:13:36 **** Incremental Build of configuration Release for project DIO ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
In file included from ../main.c:8:
c:/winavr-20100110/lib/gcc/../../avr/include/avr/delay.h:36:2: warning: #warning "This file has been moved to <util/delay.h>."
Finished building: ../main.c
 
Building target: DIO.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DIO.map -mmcu=atmega32 -o "DIO.elf"  ./DIO.o ./main.o   
Finished building target: DIO.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DIO.elf  "DIO.hex"
Finished building: DIO.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:DIO.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DIO.hex"
avrdude: input file DIO.hex auto detected as Intel Hex
avrdude: writing flash (864 bytes):

Writing | ################################################## | 100% 0.58s

avrdude: 864 bytes of flash written
avrdude: verifying flash memory against DIO.hex:
avrdude: load data flash data from input file DIO.hex:
avrdude: input file DIO.hex auto detected as Intel Hex
avrdude: input file DIO.hex contains 864 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.42s

avrdude: verifying ...
avrdude: 864 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:15:41 **** Incremental Build of configuration Release for project DIO ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
In file included from ../main.c:8:
c:/winavr-20100110/lib/gcc/../../avr/include/avr/delay.h:36:2: warning: #warning "This file has been moved to <util/delay.h>."
Finished building: ../main.c
 
Building target: DIO.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DIO.map -mmcu=atmega32 -o "DIO.elf"  ./DIO.o ./main.o   
Finished building target: DIO.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DIO.elf  "DIO.hex"
Finished building: DIO.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:DIO.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DIO.hex"
avrdude: input file DIO.hex auto detected as Intel Hex
avrdude: writing flash (912 bytes):

Writing | ################################################## | 100% 0.61s

avrdude: 912 bytes of flash written
avrdude: verifying flash memory against DIO.hex:
avrdude: load data flash data from input file DIO.hex:
avrdude: input file DIO.hex auto detected as Intel Hex
avrdude: input file DIO.hex contains 912 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.45s

avrdude: verifying ...
avrdude: 912 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:16:30 **** Incremental Build of configuration Release for project DIO ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
In file included from ../main.c:8:
c:/winavr-20100110/lib/gcc/../../avr/include/avr/delay.h:36:2: warning: #warning "This file has been moved to <util/delay.h>."
Finished building: ../main.c
 
Building target: DIO.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DIO.map -mmcu=atmega32 -o "DIO.elf"  ./DIO.o ./main.o   
Finished building target: DIO.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DIO.elf  "DIO.hex"
Finished building: DIO.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:DIO.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DIO.hex"
avrdude: input file DIO.hex auto detected as Intel Hex
avrdude: writing flash (922 bytes):

Writing | ################################################## | 100% 0.63s

avrdude: 922 bytes of flash written
avrdude: verifying flash memory against DIO.hex:
avrdude: load data flash data from input file DIO.hex:
avrdude: input file DIO.hex auto detected as Intel Hex
avrdude: input file DIO.hex contains 922 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.45s

avrdude: verifying ...
avrdude: 922 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:17:34 **** Incremental Build of configuration Release for project DIO ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
In file included from ../main.c:10:
../DIO.h:11: error: expected ')' before 'PortNumber'
../DIO.h:12: error: expected ')' before 'PortNumber'
../DIO.h:14: error: expected ')' before 'PortNumber'
../DIO.h:15: error: expected ')' before 'PortNumber'
../DIO.h:17: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'DIO_u8GetPortValue'
../DIO.h:18: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'DIO_u8GetPinValue'
../main.c: In function 'main':
../main.c:18: warning: implicit declaration of function 'DIO_VidSetPinDirection'
../main.c:27: warning: implicit declaration of function 'DIO_VidSetPinValue'
make: *** [main.o] Error 1
11:17:53 **** Incremental Build of configuration Release for project DIO ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
In file included from ../main.c:10:
../DIO.h:11: error: expected ')' before 'PortNumber'
../DIO.h:12: error: expected ')' before 'PortNumber'
../DIO.h:14: error: expected ')' before 'PortNumber'
../DIO.h:15: error: expected ')' before 'PortNumber'
../DIO.h:17: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'DIO_u8GetPortValue'
../DIO.h:18: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'DIO_u8GetPinValue'
../main.c: In function 'main':
../main.c:18: warning: implicit declaration of function 'DIO_VidSetPinDirection'
../main.c:27: warning: implicit declaration of function 'DIO_VidSetPinValue'
make: *** [main.o] Error 1
11:19:21 **** Incremental Build of configuration Release for project DIO ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
In file included from ../main.c:8:
c:/winavr-20100110/lib/gcc/../../avr/include/avr/delay.h:36:2: warning: #warning "This file has been moved to <util/delay.h>."
Finished building: ../main.c
 
Building target: DIO.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,DIO.map -mmcu=atmega32 -o "DIO.elf"  ./DIO.o ./main.o   
Finished building target: DIO.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex DIO.elf  "DIO.hex"
Finished building: DIO.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:DIO.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "DIO.hex"
avrdude: input file DIO.hex auto detected as Intel Hex
avrdude: writing flash (922 bytes):

Writing | ################################################## | 100% 0.63s

avrdude: 922 bytes of flash written
avrdude: verifying flash memory against DIO.hex:
avrdude: load data flash data from input file DIO.hex:
avrdude: input file DIO.hex auto detected as Intel Hex
avrdude: input file DIO.hex contains 922 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.46s

avrdude: verifying ...
avrdude: 922 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:50:14 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkyLight.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkyLight.map -mmcu=atmega32 -o "BlinkyLight.elf"  ./main.o   
Finished building target: BlinkyLight.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkyLight.elf  "BlinkyLight.hex"
Finished building: BlinkyLight.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:BlinkyLight.hex:a
avrdude: error: could not find USB device "USBasp" with vid=0x16c0 pid=0x5dc
make: *** [avrdudedummy] Error 1
11:50:57 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: BlinkyLight.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkyLight.map -mmcu=atmega32 -o "BlinkyLight.elf"  ./main.o   
Finished building target: BlinkyLight.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkyLight.elf  "BlinkyLight.hex"
Finished building: BlinkyLight.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:BlinkyLight.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkyLight.hex"
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: writing flash (156 bytes):

Writing | ################################################## | 100% 0.11s

avrdude: 156 bytes of flash written
avrdude: verifying flash memory against BlinkyLight.hex:
avrdude: load data flash data from input file BlinkyLight.hex:
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: input file BlinkyLight.hex contains 156 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.08s

avrdude: verifying ...
avrdude: 156 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:57:55 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:11:24: warning: extra tokens at end of #include directive
Finished building: ../main.c
 
Building target: BlinkyLight.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkyLight.map -mmcu=atmega32 -o "BlinkyLight.elf"  ./main.o   
Finished building target: BlinkyLight.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkyLight.elf  "BlinkyLight.hex"
Finished building: BlinkyLight.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:BlinkyLight.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.02s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkyLight.hex"
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: writing flash (198 bytes):

Writing | ################################################## | 100% 0.14s

avrdude: 198 bytes of flash written
avrdude: verifying flash memory against BlinkyLight.hex:
avrdude: load data flash data from input file BlinkyLight.hex:
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: input file BlinkyLight.hex contains 198 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.09s

avrdude: verifying ...
avrdude: 198 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
11:58:41 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:11:24: warning: extra tokens at end of #include directive
Finished building: ../main.c
 
Building target: BlinkyLight.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkyLight.map -mmcu=atmega32 -o "BlinkyLight.elf"  ./main.o   
Finished building target: BlinkyLight.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkyLight.elf  "BlinkyLight.hex"
Finished building: BlinkyLight.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:BlinkyLight.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.02s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkyLight.hex"
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: writing flash (198 bytes):

Writing | ################################################## | 100% 0.14s

avrdude: 198 bytes of flash written
avrdude: verifying flash memory against BlinkyLight.hex:
avrdude: load data flash data from input file BlinkyLight.hex:
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: input file BlinkyLight.hex contains 198 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.09s

avrdude: verifying ...
avrdude: 198 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
12:00:08 **** Incremental Build of configuration Release for project BlinkyLight ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=12000000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
../main.c:11:24: warning: extra tokens at end of #include directive
Finished building: ../main.c
 
Building target: BlinkyLight.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,BlinkyLight.map -mmcu=atmega32 -o "BlinkyLight.elf"  ./main.o   
Finished building target: BlinkyLight.elf
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex BlinkyLight.elf  "BlinkyLight.hex"
Finished building: BlinkyLight.hex
 
Invoking: AVRDude
C:\WinAVR-20100110\bin\avrdude -pm32 -cusbasp -Uflash:w:BlinkyLight.hex:a

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "BlinkyLight.hex"
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: writing flash (198 bytes):

Writing | ################################################## | 100% 0.13s

avrdude: 198 bytes of flash written
avrdude: verifying flash memory against BlinkyLight.hex:
avrdude: load data flash data from input file BlinkyLight.hex:
avrdude: input file BlinkyLight.hex auto detected as Intel Hex
avrdude: input file BlinkyLight.hex contains 198 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 0.11s

avrdude: verifying ...
avrdude: 198 bytes of flash verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 
